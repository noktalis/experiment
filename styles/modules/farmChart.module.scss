@use "../components/color-mixins" as *;
@use "../components/fonts" as *;

/* For farmChart, which contains all rows and data */
.chart {
	display: flex;
	flex-direction: column;
	justify-content: center;
	gap: 10px;
}

/* For farmRowChart, which represents data on a relic/artifact set */
.row {
	display: grid;
	grid-template-columns: auto 1fr;
	border: solid 2px var(--ae-gold2);// TODO move to theme class
	padding: 5px;
}

/* Information about a relic/artifact set on the LEFT side of a row */
.left {
	display: flex;
	flex-direction: column;
	align-items: center;
	padding: 10px;

	/* Button toggles expansion of information in the row, and shows name and image of set */
	button {
		// Dimension and Shape
		min-width: 130px;
		max-width: 130px;
		min-height: 130px;
		border-radius: 5px;

		// Content Structure
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		text-wrap: wrap;
		
		// Appearance
		border: var(--ae-gold2) 4px solid;// TODO move to theme class
		@include btn-colors(var(--ae-red1),var(--ae-gold3),
			var(--ae-blue2),var(--ae-gold3),
			var(--ae-red3),var(--ae-gold3));
		font-family: DIN, "DIN", sans-serif;

		/* Icon of set */
		img {
			max-width: 50px;
		}
	}

	/* Contains set description */
	p {
		width: 200px;
	}
}

/* Information about a relic/artifact set on the RIGHT side of a row */
.right {
	display: flex;
	flex-direction: column;
}

.mainStatGroup {
	display: flex;
	flex-direction: column;
}

/**For a container that holds a <p> element 
 *	The label text is within the <p> element. :before and :after create horizontal lines through the vertical center of the <p> element
*/
.label {
	position: relative;

	> p {
		display: flex;
		align-items: center;
		&:before, &:after {
			content: "";
			display: inline-block;
			vertical-align: middle;
  			border-bottom: 1px solid;
			text-align: left;
		}
		&:before {
			margin: 0 0.25em 0 0;
			width: 2%;
		}
		&:after {
			margin: 0 0 0 0.25em;
			flex-grow: 1;
		}
	}
}

/* For a grid of characters (& their substats) */
.chars {
	display: flex;
	flex-wrap: wrap;
	gap: 3px;
	margin-bottom: 15px;
}

/* To display a character, their portrait, name, and substats*/
.character {
	display: grid;
	grid-template-areas: 'icon''substats';
	gap: 6px;

	background-color: rgba($color: #000000, $alpha: 0.3);// TODO move to theme class
	padding: 5px;
	width: 19%;
	overflow: hidden;

	img {
		width: 70px;
		border-radius: 35px;
	}
}

/* Image and nametag */
.icon {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	grid-area: icon;
	text-align: center;
}

.mainstats {
	grid-area: mainstats;
	display: grid;
	grid-template-columns: auto 1fr;
	column-gap: 3px;
	font-size: small;
	align-items: center;

	img {
		width: 25px;
		height: auto;
	}
}

.substatsContainer {
	display: flex;
	grid-area: substats;
	flex-wrap: wrap;
	gap: 5px;
	height: fit-content;

	span {
		height: fit-content;
		font-size: medium;
		background-color: var(--ae-gold2);// TODO move to theme class
		color: #000000;
		border-radius: 10px;
		padding: 3px;
	}
}

/* portraits and small use case indicators*/
.userDisplay {
	> p {
		display: flex;
		justify-content: center;
		width: 100%;
	}
}

/* For grid of character portraits. No nametags */
.portraits {
	display: grid;
	grid-template-columns: auto auto auto;
	margin-top: 10px;

	img {
		max-width: 40px;
	}
}

.pieces {
	margin: 15px 0 15px 0;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;

	details {
		display: inline-block;
		width: fit-content;
	}

	details > summary {
		list-style: none;
		img {
			max-width: 50px;
		}
	}

	details[open]{
		width: 100%;
	}

	details > hr {
		margin: 10px 0 10px 0;
	}
}
